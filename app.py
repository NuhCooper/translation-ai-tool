# -*- coding: utf-8 -*-
"""SurveyTranslationAITool.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/148nymf51wQFXVep7UHeNGuwK0QmQOCP-

# Survey Translation AI Tool

An AI-powered pipeline for translating survey questions into multiple languages.

**Technologies:** Python, Hugging Face Transformers, Gradio  
**Deployment:** Hugging Face Spaces  
**Author:** Nuh Cooper

## Project Overview

This notebook demonstrates a simple AI translation workflow suitable for localising survey questions.

Key features:
- Neural machine translation (NMT) using pre-trained MarianMT models.
- Multiple language pairs (e.g., English to French, German, Spanish).
- An interactive web interface created with Gradio.
- Structured for packaging and deployment on Hugging Face Spaces.

The workflow is prototyped in Google Colab and prepared for production hosting.
"""

# Installing required libraries
!pip install transformers gradio -q

# Importing libraries
from transformers import MarianMTModel, MarianTokenizer
import gradio as gr

"""## Translation Function

Language pairs are mapped to pre-trained MarianMT models.  
The translation function dynamically loads the required model for each language pair and returns the translated text.
"""

# Mapping translation directions to model names
lang_map = {
    "English to French": "Helsinki-NLP/opus-mt-en-fr",
    "English to German": "Helsinki-NLP/opus-mt-en-de",
    "English to Spanish": "Helsinki-NLP/opus-mt-en-es",
    "English to Italian": "Helsinki-NLP/opus-mt-en-it",
    "English to Dutch": "Helsinki-NLP/opus-mt-en-nl",
    "English to Portuguese": "Helsinki-NLP/opus-mt-en-pt",
    "English to Polish": "Helsinki-NLP/opus-mt-en-pl",
    "English to Chinese": "Helsinki-NLP/opus-mt-en-zh",
    "English to Japanese": "Helsinki-NLP/opus-mt-en-ja",
    "English to Arabic": "Helsinki-NLP/opus-mt-en-ar"
}

# Translation function
def translate(text, direction):
    """
    Translates input text from English to the selected language using MarianMT.

    Args:
        text (str): The text to translate.
        direction (str): The selected language pair.

    Returns:
        str: The translated text.
    """
    model_name = lang_map[direction]
    tokenizer = MarianTokenizer.from_pretrained(model_name)
    model = MarianMTModel.from_pretrained(model_name)

    tokens = tokenizer(text, return_tensors="pt", padding=True)
    output = model.generate(**tokens)
    result = tokenizer.decode(output[0], skip_special_tokens=True)

    return result

"""## Gradio User Interface

An interactive web interface is created using Gradio.  
Users can input survey text, select the target language, and view the translated output in real time.
"""

# Launching the Gradio UI
iface = gr.Interface(
    fn=translate,
    inputs=[
        gr.Textbox(label="Enter your survey question"),
        gr.Dropdown(choices=list(lang_map.keys()), label="Translate to")
    ],
    outputs="text",
    title="Survey Translation Tool",
    description="Use AI to translate survey questions quickly and accurately!"
)

iface.launch(share=True)  # share=True creates a public link

"""## End of Notebook

This section verifies the library versions used during development, ensuring reproducibility and future debugging support.
"""

# End of Notebook
# Check library versions for reference

import transformers
import gradio

print(f"Transformers version: {transformers.__version__}")
print(f"Gradio version: {gradio.__version__}")

"""## Summary

In this notebook:
- Required libraries were installed and imported.
- A flexible translation function was implemented using MarianMT models.
- An interactive Gradio interface was configured and launched.
- A public share link was generated for immediate testing.

Next steps include extending language coverage, refining the user interface, and deploying the tool as a production-ready app on Hugging Face Spaces.
"""